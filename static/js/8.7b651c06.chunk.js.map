{"version":3,"sources":["components/common/contact-form.jsx"],"names":["Button","styled","div","props","theme","filters","buttonBgColor","buttonFgColor","activeBgColor","activeFgColor","ContactForm","state","message","subject","mobile","name","email","text","emptyContacts","sendingMessage","handleChange","input","currentTarget","value","setState","setSending","b","sendMessage","a","m","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","axios","post","beUrl","toast","success","error","this","newestOnTop","rtl","pauseOnFocusLoss","className","htmlFor","onChange","type","id","placeholder","role","hidden","onClick","disabled","aria-hidden","messageStatus","Component"],"mappings":"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","file":"static/js/8.7b651c06.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { beUrl } from \"../../config\";\n\nconst Button = styled.div`\n  background-color: ${(props) => props.theme.filters.buttonBgColor};\n  border-color: ${(props) => props.theme.filters.buttonBgColor};\n  color: ${(props) => props.theme.filters.buttonFgColor};\n\n  &:hover {\n    background-color: ${(props) => props.theme.filters.activeBgColor};\n    border-color: ${(props) => props.theme.filters.activeBgColor};\n    color: ${(props) => props.theme.filters.activeFgColor};\n  }\n\n  &.disabled {\n    background-color: gray;\n    border-color: gray;\n    cursor: not-allowed;\n  }\n`;\n\nclass ContactForm extends Component {\n  state = {\n    message: {\n      subject: \"\",\n      mobile: \"\",\n      name: \"\",\n      email: \"\",\n      text: \"\",\n    },\n    emptyContacts: false,\n    sendingMessage: false,\n  };\n\n  componentDidMount() {\n    const message = { ...this.state.message };\n    message.subject = this.props.subject;\n    this.setState({ message });\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    const message = { ...this.state.message };\n    message[input.name] = input.value;\n    this.setState({ message });\n  };\n\n  setSending = (b) => {\n    this.setState({ sendingMessage: b });\n  };\n\n  sendMessage = async () => {\n    if (this.state.sendingMessage) {\n      return;\n    }\n\n    const { message: m } = this.state;\n\n    if (m.mobile === \"\" && m.email === \"\") {\n      this.setState({ sendingMessage: false, emptyContacts: true });\n      return;\n    }\n\n    const options = {\n      position: \"bottom-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    };\n\n    try {\n      await axios.post(`${beUrl}/messages/send`, this.state.message);\n\n      toast.success(\"A sua mensagem foi enviada com sucesso!\", options);\n    } catch {\n      toast.error(\n        \"Erro ao enviar mensagem. Por favor tente novamente mais tarde ou contacte-nos diretamente.\",\n        options\n      );\n    }\n    const message = { ...this.state.message };\n    message.name = \"\";\n    message.mobile = \"\";\n    message.email = \"\";\n    message.text = \"\";\n\n    this.setState({ message, sendingMessage: false, emptyContacts: false });\n  };\n\n  render() {\n    const { message, sendingMessage, emptyContacts } = this.state;\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <ToastContainer\n          position=\"bottom-center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className=\"row ml-lg-5 mr-lg-5 ml-sm-2 mr-sm-2 ml-1 mr-1\">\n          <div className=\"col-12 col-lg-9 mt-5\">\n            <h4>Tem alguma dúvida?</h4>\n            <form>\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <div className=\"col\">\n                    <label htmlFor=\"subject\">Assunto</label>\n                    <input\n                      value={message.subject}\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      name=\"subject\"\n                      id=\"subject\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <label htmlFor=\"mobile\">Contacto</label>\n                    <input\n                      value={message.mobile}\n                      onChange={this.handleChange}\n                      placeholder=\"Contacto\"\n                      type=\"text\"\n                      name=\"mobile\"\n                      id=\"mobile\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"name\">Nome</label>\n                  <input\n                    value={message.name}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    placeholder=\"Nome\"\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    value={message.email}\n                    onChange={this.handleChange}\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group col-12\">\n                  <label htmlFor=\"text\">Mensagem</label>\n                  <textarea\n                    value={message.text}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"text\"\n                    placeholder=\"Pedido de informações\"\n                  ></textarea>\n                  <div\n                    className=\"alert alert-danger\"\n                    role=\"alert\"\n                    hidden={!emptyContacts}\n                  >\n                    Se não preencher um contacto de e-mail ou móvel, não será\n                    possível contactá-lo de volta.\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\"></div>\n              <Button\n                className={`btn btn-primary mb-5 ${\n                  sendingMessage ? \"disabled\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setSending(true);\n                  this.sendMessage();\n                }}\n                disabled={true}\n              >\n                {sendingMessage ? (\n                  <span\n                    className=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                ) : (\n                  \"Enviar\"\n                )}\n              </Button>\n              {this.state.messageStatus && (\n                <small>{this.state.messageStatus}</small>\n              )}\n            </form>\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default ContactForm;\n"],"sourceRoot":""}