{"version":3,"sources":["components/filter.jsx"],"names":["FilterTitle","styled","h4","props","theme","primaryText","Button","button","buttonBgColor","buttonFgColor","activeBgColor","activeFgColor","badgeBgColor","badgeFgColor","Filter","state","a","axios","get","cars","data","brands","forEach","car","b","attributes","brand","value","includes","push","_","sortBy","this","setState","allBrands","filter","c","length","sold","showSold","selectedBrands","className","onClick","onDisableAvailableFilter","onClickAvailable","countSold","onClickBrand","map","countBrand","Component"],"mappings":"wQAMMA,EAAcC,IAAOC,GAAV,gEAEN,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAG5BC,EAASL,IAAOM,OAAV,uPACU,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,iBAClC,SAACL,GAAD,OAAWA,EAAMC,MAAMK,iBAGV,SAACN,GAAD,OAAWA,EAAMC,MAAMM,iBAClC,SAACP,GAAD,OAAWA,EAAMC,MAAMO,iBAChB,SAACR,GAAD,OAAWA,EAAMC,MAAMM,iBAInB,SAACP,GAAD,OAAWA,EAAMC,MAAMQ,gBAClC,SAACT,GAAD,OAAWA,EAAMC,MAAMS,gBAK9BC,E,4MACJC,MAAQ,G,8FAER,gCAAAC,EAAA,sEAC6BC,IAAMC,IAC/B,4CAFJ,gBACcC,EADd,EACQC,KAIFC,EAAS,GACbF,EAAKG,SAAQ,SAACC,GACZ,IAAMC,EAAID,EAAIE,WAAWC,MAAMC,MAC1BN,EAAOO,SAASJ,IACnBH,EAAOQ,KAAKL,MAGhBH,EAASS,IAAEC,OAAOV,GAElBW,KAAKC,SAAS,CAAEC,UAAWb,EAAQF,SAdrC,gD,mFAiBA,WAAmB,IAAD,EACRA,EAASa,KAAKjB,MAAdI,KACJE,EAAS,GAFG,cAGAF,GAHA,IAGhB,2BAAsB,CAAC,IACjBK,EADgB,QACRC,WAAWC,MAAMC,MACxBN,EAAOO,SAASJ,IACnBH,EAAOQ,KAAKL,IANA,8BAWhB,OADAH,EAASS,IAAEC,OAAOV,K,wBAIpB,SAAWK,GAET,OADiBM,KAAKjB,MAAdI,KACIgB,QAAO,SAACC,GAAD,OAAOA,EAAEX,WAAWC,MAAMC,QAAUD,KAAOW,S,uBAGhE,WAEE,OADiBL,KAAKjB,MAAdI,KACIgB,QAAO,SAACC,GAAD,OAAOA,EAAEE,QAAMD,S,oBAGpC,WAAU,IAAD,SAC8BL,KAAK7B,MAAlCoC,EADD,EACCA,SAAUC,EADX,EACWA,eADX,EAEqBR,KAAKjB,MAAzBmB,EAFD,EAECA,UAAWf,EAFZ,EAEYA,KAEnB,OAAKe,GAAcf,EASjB,eAAC,IAAD,CAAef,MAAO4B,KAAK7B,MAAMC,MAAjC,UACE,cAACJ,EAAD,CAAayC,UAAU,SAAvB,qBAEA,sBAAKA,UAAU,qBAAf,UACE,eAACnC,EAAD,CACEmC,UAAS,4EACPF,EAAW,SAAW,IAExBG,QAAS,kBAAM,EAAKvC,MAAMwC,4BAJ5B,kBAOE,sBAAMF,UAAU,iCAAhB,SACGtB,EAAKkB,YAIV,eAAC/B,EAAD,CACEmC,UAAS,4EACNF,EAAsB,GAAX,UAEdG,QAAS,kBAAM,EAAKvC,MAAMyC,oBAJ5B,2BAOE,sBAAMH,UAAU,iCAAhB,SACGtB,EAAKkB,OAASL,KAAKa,oBAK1B,cAAC7C,EAAD,CAAayC,UAAU,SAAvB,oBAEA,sBAAKA,UAAU,qBAAf,UACE,eAACnC,EAAD,CACEmC,UAAS,4EACmB,IAA1BD,EAAeH,OAAe,SAAW,IAE3CK,QAAS,kBAAM,EAAKvC,MAAM2C,aAAa,QAJzC,kBAOE,sBAAML,UAAU,iCAAhB,SACGtB,EAAKkB,YAGTH,EAAUa,KAAI,SAACrB,GACd,OACE,eAACpB,EAAD,CAEEmC,UAAS,4EACPD,EAAeZ,SAASF,GAAS,SAAW,IAE9CgB,QAAS,kBAAM,EAAKvC,MAAM2C,aAAapB,IALzC,UAOGA,EACD,sBAAMe,UAAU,iCAAhB,SACG,EAAKO,WAAWtB,OARdA,YArDb,cAAC,IAAD,UACE,cAAC,IAAD,U,GAnDWuB,aA0HNnC","file":"static/js/9.49ba9f83.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from \"axios\";\nimport LoadingSpinner, { LoadingContainer } from \"./common/loading\";\n\nconst FilterTitle = styled.h4`\n  margin: 15px 0px;\n  color: ${(props) => props.theme.primaryText};\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.buttonBgColor};\n  color: ${(props) => props.theme.buttonFgColor};\n\n  &.active {\n    background-color: ${(props) => props.theme.activeBgColor};\n    color: ${(props) => props.theme.activeFgColor};\n    border-color: ${(props) => props.theme.activeBgColor};\n  }\n\n  & span {\n    background-color: ${(props) => props.theme.badgeBgColor};\n    color: ${(props) => props.theme.badgeFgColor};\n    margin-left: 10px;\n  }\n`;\n\nclass Filter extends Component {\n  state = {};\n\n  async componentDidMount() {\n    let { data: cars } = await axios.get(\n      \"https://vinculobjetivobe.vercel.app/cars\"\n    );\n\n    let brands = [];\n    cars.forEach((car) => {\n      const b = car.attributes.brand.value;\n      if (!brands.includes(b)) {\n        brands.push(b);\n      }\n    });\n    brands = _.sortBy(brands);\n\n    this.setState({ allBrands: brands, cars });\n  }\n\n  getUniqueBrands() {\n    const { cars } = this.state;\n    let brands = [];\n    for (let car of cars) {\n      let b = car.attributes.brand.value;\n      if (!brands.includes(b)) {\n        brands.push(b);\n      }\n    }\n\n    brands = _.sortBy(brands);\n    return brands;\n  }\n\n  countBrand(brand) {\n    const { cars } = this.state;\n    return cars.filter((c) => c.attributes.brand.value === brand).length;\n  }\n\n  countSold() {\n    const { cars } = this.state;\n    return cars.filter((c) => c.sold).length;\n  }\n\n  render() {\n    const { showSold, selectedBrands } = this.props;\n    const { allBrands, cars } = this.state;\n\n    if (!allBrands || !cars) {\n      return (\n        <LoadingContainer>\n          <LoadingSpinner></LoadingSpinner>\n        </LoadingContainer>\n      );\n    }\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <FilterTitle className=\"title1\">Filtros</FilterTitle>\n\n        <div className=\"list-group filter1\">\n          <Button\n            className={`list-group-item d-flex justify-content-between align-items-center ${\n              showSold ? \"active\" : \"\"\n            }`}\n            onClick={() => this.props.onDisableAvailableFilter()}\n          >\n            Todos\n            <span className=\"badge badge-primary badge-pill\">\n              {cars.length}\n            </span>\n          </Button>\n\n          <Button\n            className={`list-group-item d-flex justify-content-between align-items-center ${\n              !showSold ? \"active\" : \"\"\n            }`}\n            onClick={() => this.props.onClickAvailable()}\n          >\n            Dispon√≠veis\n            <span className=\"badge badge-primary badge-pill\">\n              {cars.length - this.countSold()}\n            </span>\n          </Button>\n        </div>\n\n        <FilterTitle className=\"title2\">Marcas</FilterTitle>\n\n        <div className=\"list-group filter2\">\n          <Button\n            className={`list-group-item d-flex justify-content-between align-items-center ${\n              selectedBrands.length === 0 ? \"active\" : \"\"\n            }`}\n            onClick={() => this.props.onClickBrand(\"all\")}\n          >\n            Todas\n            <span className=\"badge badge-primary badge-pill\">\n              {cars.length}\n            </span>\n          </Button>\n          {allBrands.map((brand) => {\n            return (\n              <Button\n                key={brand}\n                className={`list-group-item d-flex justify-content-between align-items-center ${\n                  selectedBrands.includes(brand) ? \"active\" : \"\"\n                }`}\n                onClick={() => this.props.onClickBrand(brand)}\n              >\n                {brand}\n                <span className=\"badge badge-primary badge-pill\">\n                  {this.countBrand(brand)}\n                </span>\n              </Button>\n            );\n          })}\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Filter;\n"],"sourceRoot":""}