{"version":3,"sources":["components/form/useForm.jsx","components/form/contact-form.jsx"],"names":["useForm","toast","options","validate","validateEmail","validateMobile","subject","useState","mobile","name","email","text","values","setValues","errors","setErrors","emptyContacts","setEmptyContacts","isSubmitting","setIsSubmitting","submitAndClean","a","axios","post","beUrl","prev","handleChange","e","target","value","v","handleSubmit","preventDefault","err","Object","keys","includes","length","success","error","Button","styled","div","props","theme","filters","buttonBgColor","buttonFgColor","activeBgColor","activeFgColor","mail","test","checkErrors","style","color","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ContactForm","newestOnTop","rtl","pauseOnFocusLoss","className","htmlFor","onChange","type","id","placeholder","role","hidden","onClick","disabled","aria-hidden"],"mappings":"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","file":"static/js/9.c6fab430.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { beUrl } from \"../../config\";\nimport axios from \"axios\";\n\nconst useForm = (\n  toast,\n  options,\n  validate,\n  validateEmail,\n  validateMobile,\n  subject\n) => {\n  const [values, setValues] = useState({\n    subject,\n    mobile: \"\",\n    name: \"\",\n    email: \"\",\n    text: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [emptyContacts, setEmptyContacts] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues((prev) => {\n      const v = {\n        ...values,\n        [name]: value,\n      };\n\n      if (name === \"email\" || name === \"mobile\") {\n        setEmptyContacts(\n          !validateEmail(v[\"email\"]) && !validateMobile(v[\"mobile\"])\n        );\n      }\n\n      return v;\n    });\n  };\n\n  const submitAndClean = async () => {\n    await axios.post(`${beUrl}/messages/send`, values);\n    setValues((prev) => {\n      //await axios.post(`${beUrl}/messages/send`, prev);\n      return { subject, mobile: \"\", name: \"\", email: \"\", text: \"\" };\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setIsSubmitting(true);\n    const err = validate(values);\n\n    setErrors(err);\n\n    setEmptyContacts(Object.keys(err).includes(\"no_contacts\"));\n\n    if (Object.keys(err).length === 0) {\n      try {\n        submitAndClean();\n        setIsSubmitting(false);\n        toast.success(\"A sua mensagem foi enviada. Obrigado!\", options);\n      } catch {\n        toast.error(\n          \"Ocorreu um erro ao enviar a sua mensagem. Por favor tente mais tarde.\",\n          options\n        );\n        setIsSubmitting(false);\n      }\n    } else {\n      //display errors\n      setIsSubmitting(false);\n    }\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    isSubmitting,\n    emptyContacts,\n  };\n};\n\nexport default useForm;\n","import styled, { ThemeProvider } from \"styled-components\";\nimport useForm from \"./useForm\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Button = styled.div`\n  background-color: ${(props) => props.theme.filters.buttonBgColor};\n  border-color: ${(props) => props.theme.filters.buttonBgColor};\n  color: ${(props) => props.theme.filters.buttonFgColor};\n\n  &:hover {\n    background-color: ${(props) => props.theme.filters.activeBgColor};\n    border-color: ${(props) => props.theme.filters.activeBgColor};\n    color: ${(props) => props.theme.filters.activeFgColor};\n  }\n\n  &.disabled {\n    background-color: gray;\n    border-color: gray;\n    cursor: not-allowed;\n  }\n`;\n\nconst validateEmail = (mail) =>\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n    mail\n  );\n\nconst validateMobile = (mobile) =>\n  /^\\d{9}$/.test(mobile) || /^\\+\\d{12}$/.test(mobile);\n\nconst validate = (values) => {\n  const err = {};\n\n  if (!validateEmail(values.email) && values.mobile === \"\") {\n    err[\"no_contacts\"] = \"Nenhum contacto foi preenchido.\";\n  }\n\n  if (values.name === \"\") {\n    err[\"name\"] = \"Por favor, indique o seu nome\";\n  }\n\n  if (values.text === \"\") {\n    err[\"text\"] = \"Coloque aqui as suas dúvidas ou questões\";\n  }\n\n  return err;\n};\n\nconst checkErrors = (errors, name) => {\n  if (Object.keys(errors).includes(name)) {\n    return <small style={{ color: \"red\" }}>{errors[name]}</small>;\n  }\n};\n\nconst options = {\n  position: \"bottom-center\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nconst ContactForm = (props) => {\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    isSubmitting,\n    emptyContacts,\n  } = useForm(\n    toast,\n    options,\n    validate,\n    validateEmail,\n    validateMobile,\n    props.subject\n  );\n\n  return (\n    <ThemeProvider theme={props.theme}>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <div className=\"row ml-lg-5 mr-lg-5 ml-sm-2 mr-sm-2 ml-1 mr-1\">\n        <div className=\"col-12 col-lg-9 mt-5\">\n          <h4>Tem alguma dúvida?</h4>\n          <form>\n            <div className=\"form-group\">\n              <div className=\"form-row\">\n                <div className=\"col\">\n                  <label htmlFor=\"subject\">Assunto</label>\n                  <input\n                    value={values.subject}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"subject\"\n                    id=\"subject\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"mobile\">Contacto</label>\n                  <input\n                    value={values.mobile}\n                    onChange={handleChange}\n                    placeholder=\"Contacto\"\n                    type=\"text\"\n                    name=\"mobile\"\n                    id=\"mobile\"\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"name\">Nome</label>\n                <input\n                  value={values.name}\n                  onChange={handleChange}\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  placeholder=\"Nome\"\n                />\n                {checkErrors(errors, \"name\")}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  value={values.email}\n                  onChange={handleChange}\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-12\">\n                <label htmlFor=\"text\">Mensagem</label>\n                <textarea\n                  value={values.text}\n                  onChange={handleChange}\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"text\"\n                  placeholder=\"Pedido de informações\"\n                ></textarea>\n                {checkErrors(errors, \"text\")}\n                <div\n                  className=\"alert alert-danger\"\n                  role=\"alert\"\n                  hidden={!emptyContacts}\n                >\n                  Se não preencher um contacto de e-mail ou móvel válido, não\n                  será possível contactá-lo de volta.\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group\"></div>\n            <Button\n              className={`btn btn-primary mb-5 ${\n                isSubmitting ? \"disabled\" : \"\"\n              }`}\n              onClick={handleSubmit}\n              disabled={true}\n            >\n              {isSubmitting ? (\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n              ) : (\n                \"Enviar\"\n              )}\n            </Button>\n            {checkErrors(errors, \"server\")}\n          </form>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactForm;\n"],"sourceRoot":""}