{"version":3,"sources":["components/common/contact-form.jsx"],"names":["Button","styled","div","props","theme","filters","buttonBgColor","buttonFgColor","activeBgColor","activeFgColor","ContactForm","state","message","subject","mobile","name","email","text","handleChange","input","currentTarget","value","setState","sendMessage","a","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","axios","post","toast","success","error","this","newestOnTop","rtl","pauseOnFocusLoss","className","htmlFor","onChange","type","id","placeholder","onClick","messageStatus","Component"],"mappings":"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","file":"static/js/8.20028c80.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Button = styled.div`\n  background-color: ${(props) => props.theme.filters.buttonBgColor};\n  border-color: ${(props) => props.theme.filters.buttonBgColor};\n  color: ${(props) => props.theme.filters.buttonFgColor};\n\n  &:hover {\n    background-color: ${(props) => props.theme.filters.activeBgColor};\n    border-color: ${(props) => props.theme.filters.activeBgColor};\n    color: ${(props) => props.theme.filters.activeFgColor};\n  }\n`;\n\nclass ContactForm extends Component {\n  state = {\n    message: {\n      subject: \"\",\n      mobile: \"\",\n      name: \"\",\n      email: \"\",\n      text: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const message = { ...this.state.message };\n    message.subject = this.props.subject;\n    this.setState({ message });\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    const message = { ...this.state.message };\n    message[input.name] = input.value;\n    this.setState({ message });\n  };\n\n  sendMessage = async () => {\n    const options = {\n      position: \"bottom-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    };\n\n    try {\n      await axios.post(\n        \"https://vinculobjetivobe.vercel.app/messages/send\",\n        this.state.message\n      );\n\n      toast.success(\"A sua mensagem foi enviada com sucesso!\", options);\n    } catch {\n      toast.error(\n        \"Erro ao enviar mensagem. Por favor tente novamente mais tarde ou contacte-nos diretamente.\",\n        options\n      );\n    }\n    const message = { ...this.state.message };\n    message.name = \"\";\n    message.mobile = \"\";\n    message.email = \"\";\n    message.text = \"\";\n\n    this.setState({ message });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <ToastContainer\n          position=\"bottom-center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className=\"row ml-lg-5 mr-lg-5 ml-sm-2 mr-sm-2 ml-1 mr-1\">\n          <div className=\"col-12 col-lg-9 mt-5\">\n            <h4>Tem alguma dúvida?</h4>\n            <form>\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <div className=\"col\">\n                    <label htmlFor=\"subject\">Assunto</label>\n                    <input\n                      value={message.subject}\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      name=\"subject\"\n                      id=\"subject\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <label htmlFor=\"mobile\">Contacto</label>\n                    <input\n                      value={message.mobile}\n                      onChange={this.handleChange}\n                      placeholder=\"Contacto\"\n                      type=\"text\"\n                      name=\"mobile\"\n                      id=\"mobile\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"name\">Nome</label>\n                  <input\n                    value={message.name}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    placeholder=\"Nome\"\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    value={message.email}\n                    onChange={this.handleChange}\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group col-12\">\n                  <label htmlFor=\"text\">Mensagem</label>\n                  <textarea\n                    value={message.text}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"text\"\n                    placeholder=\"Pedido de informações\"\n                  ></textarea>\n                </div>\n              </div>\n\n              <div className=\"form-group\"></div>\n              <Button\n                className=\"btn btn-primary mb-5\"\n                onClick={this.sendMessage}\n              >\n                Enviar\n              </Button>\n              {this.state.messageStatus && (\n                <small>{this.state.messageStatus}</small>\n              )}\n            </form>\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default ContactForm;\n"],"sourceRoot":""}