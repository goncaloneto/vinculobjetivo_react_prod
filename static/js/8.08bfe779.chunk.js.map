{"version":3,"sources":["components/filter.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["FilterTitle","styled","h4","props","theme","primaryText","Button","button","buttonBgColor","buttonFgColor","activeBgColor","activeFgColor","badgeBgColor","badgeFgColor","ToggleWithTooltip","span","Filter","state","a","axios","get","beUrl","cars","data","brands","forEach","car","b","attributes","brand","value","includes","push","_","sortBy","this","setState","allBrands","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","filter","c","sold","showSold","selectedBrands","className","onClick","toggleVisibility","expanded","style","margin","onDisableAvailableFilter","onClickAvailable","countSold","onClickBrand","map","countBrand","Component"],"mappings":"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","file":"static/js/8.08bfe779.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from \"axios\";\nimport LoadingSpinner, { LoadingContainer } from \"./common/loading\";\nimport { beUrl } from \"../config\";\n\nconst FilterTitle = styled.h4`\n  color: ${(props) => props.theme.primaryText};\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.buttonBgColor};\n  color: ${(props) => props.theme.buttonFgColor};\n\n  &.active {\n    background-color: ${(props) => props.theme.activeBgColor};\n    color: ${(props) => props.theme.activeFgColor};\n    border-color: ${(props) => props.theme.activeBgColor};\n  }\n\n  & span {\n    background-color: ${(props) => props.theme.badgeBgColor};\n    color: ${(props) => props.theme.badgeFgColor};\n    margin-left: 10px;\n  }\n`;\n\nconst ToggleWithTooltip = styled.span`\n  cursor: pointer;\n  margin: 0 10px;\n\n  & .tooltiptext {\n    visibility: hidden;\n    opacity: 0;\n    transition: 0.5s ease-in;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px;\n    font-size: 0.9em;\n\n    position: absolute;\n    margin-left: 10px;\n    z-index: 999;\n  }\n\n  &:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n    transition: 0.5s ease-in;\n  }\n\n  & .word {\n    color: ${(props) => props.theme.badgeBgColor};\n  }\n`;\n\nclass Filter extends Component {\n  state = {};\n\n  async componentDidMount() {\n    let { data: cars } = await axios.get(`${beUrl}/cars`);\n\n    let brands = [];\n    cars.forEach((car) => {\n      const b = car.attributes.brand.value;\n      if (!brands.includes(b)) {\n        brands.push(b);\n      }\n    });\n    brands = _.sortBy(brands);\n\n    this.setState({ allBrands: brands, cars });\n  }\n\n  getUniqueBrands() {\n    const { cars } = this.state;\n    let brands = [];\n    for (let car of cars) {\n      let b = car.attributes.brand.value;\n      if (!brands.includes(b)) {\n        brands.push(b);\n      }\n    }\n\n    brands = _.sortBy(brands);\n    return brands;\n  }\n\n  countBrand(brand) {\n    const { cars } = this.state;\n    return cars.filter((c) => c.attributes.brand.value === brand).length;\n  }\n\n  countSold() {\n    const { cars } = this.state;\n    return cars.filter((c) => c.sold).length;\n  }\n\n  render() {\n    const { showSold, selectedBrands } = this.props;\n    const { allBrands, cars } = this.state;\n\n    if (!allBrands || !cars) {\n      return (\n        <LoadingContainer>\n          <LoadingSpinner></LoadingSpinner>\n        </LoadingContainer>\n      );\n    }\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <FilterTitle className=\"title1\">\n          Filtros{\" \"}\n          <ToggleWithTooltip onClick={this.props.toggleVisibility}>\n            <i\n              className={`fas ${\n                this.props.expanded ? \"fa-chevron-up\" : \"fa-chevron-down\"\n              }`}\n            ></i>\n            <span className=\"tooltiptext\">\n              Clique para\n              <span className=\"word\">\n                {this.props.expanded ? \" esconder \" : \" mostrar \"}\n              </span>{\" \"}\n              os filtros\n            </span>\n          </ToggleWithTooltip>\n        </FilterTitle>{\" \"}\n        {this.props.expanded ? (\n          <>\n            {\" \"}\n            <div className=\"list-group filter1\" style={{ margin: \"15px 0\" }}>\n              <Button\n                className={`list-group-item d-flex justify-content-between align-items-center ${\n                  showSold ? \"active\" : \"\"\n                }`}\n                onClick={() => this.props.onDisableAvailableFilter()}\n              >\n                Todos\n                <span className=\"badge badge-primary badge-pill\">\n                  {cars.length}\n                </span>\n              </Button>\n\n              <Button\n                className={`list-group-item d-flex justify-content-between align-items-center ${\n                  !showSold ? \"active\" : \"\"\n                }`}\n                onClick={() => this.props.onClickAvailable()}\n              >\n                Dispon√≠veis\n                <span className=\"badge badge-primary badge-pill\">\n                  {cars.length - this.countSold()}\n                </span>\n              </Button>\n            </div>\n            <FilterTitle className=\"title2\">Marcas</FilterTitle>\n            <div className=\"list-group filter2\" style={{ margin: \"15px 0\" }}>\n              <Button\n                className={`list-group-item d-flex justify-content-between align-items-center ${\n                  selectedBrands.length === 0 ? \"active\" : \"\"\n                }`}\n                onClick={() => this.props.onClickBrand(\"all\")}\n              >\n                Todas\n                <span className=\"badge badge-primary badge-pill\">\n                  {cars.length}\n                </span>\n              </Button>\n              {allBrands.map((brand) => {\n                return (\n                  <Button\n                    key={brand}\n                    className={`list-group-item d-flex justify-content-between align-items-center ${\n                      selectedBrands.includes(brand) ? \"active\" : \"\"\n                    }`}\n                    onClick={() => this.props.onClickBrand(brand)}\n                  >\n                    {brand}\n                    <span className=\"badge badge-primary badge-pill\">\n                      {this.countBrand(brand)}\n                    </span>\n                  </Button>\n                );\n              })}\n            </div>{\" \"}\n          </>\n        ) : (\n          \"\"\n        )}\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Filter;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}